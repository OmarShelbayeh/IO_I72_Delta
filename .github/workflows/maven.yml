# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest
    
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:12-alpine
        # Provide the password for postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: IO

        ports:
          - 5432:5432
          
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '16'
        distribution: 'adopt'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
      
    - name: Build docs with Maven
      run: mvn javadoc:javadoc

    - name: Copy to Documentation Website Location
      run: |
        rm -rf docs
        cp -rf target/site/apidocs/. docs

    - name: Tidy up the javadocs
      id: tidy
      uses: cicirello/javadoc-cleanup@v1
      with:
        path-to-root: docs
    
    - name: Log javadoc-cleanup output
      run: |
        echo "modified-count = ${{ steps.tidy.outputs.modified-count }}"
    
    - name: Commit documentation changes
      run: |
        if [[ `git status --porcelain` ]]; then
          git config --global user.name 'YOUR NAME HERE'
          git config --global user.email 'YOUR-GITHUB-USERID@users.noreply.github.com'
          git add -A
          git commit -m "Automated API website updates."
        fi

